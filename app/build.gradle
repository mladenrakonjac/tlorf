apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    google()
}

def getVersionCode = { ->
    try {
        def code = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--remotes'
            standardOutput = code
        }
        return code.toString().split("\n").size()
    } catch (ignored) {
        return -1
    }
}

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine './version.sh'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (ignored) {
        return null
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.1'
    defaultConfig {
        applicationId "me.factliverpool.tlrof"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode getVersionCode()
        versionName getVersionName()
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors {

        finalProduction {
            dimension "default"
            resValue "string", "app_name", "TLROF remote"
            buildConfigField 'String', 'SERVERURL', '"nothingfornow"'
            buildConfigField 'String', 'FIREBASE_BASE', '"states"'

        }

        local {
            dimension "default"
            applicationIdSuffix ".local"
            resValue "string", "app_name", "TLROF local"
            buildConfigField 'String', 'SERVERURL', '"nothingfornow"'
            buildConfigField 'String', 'FIREBASE_BASE', '"states"'


        }
    }

    dataBinding {
        enabled = true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    dexOptions {
        jumboMode true
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    //layouts
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:cardview-v7:27.0.2'
    implementation 'com.android.support:support-compat:27.0.2'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support:recyclerview-v7:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    kapt 'com.android.databinding:compiler:3.0.0-beta6'

    //testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    testCompile 'org.mockito:mockito-core:2.8.9'
    testCompile 'org.assertj:assertj-core:3.5.2'

    //lifecycle
    implementation "android.arch.lifecycle:runtime:1.0.3"
    implementation "android.arch.lifecycle:extensions:1.0.0"
    kapt "android.arch.lifecycle:compiler:1.0.0"

    //networking
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation "com.squareup.retrofit2:converter-gson:2.3.0"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    //Dependency injection framework Dagger2
    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:2.1.4"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.0.0'

    //logs
    implementation 'com.jakewharton.timber:timber:4.5.1'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.3.1'
    kapt 'com.github.bumptech.glide:compiler:4.3.1'

    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }

    implementation 'com.google.firebase:firebase-core:11.6.2'
    implementation 'com.google.firebase:firebase-messaging:11.6.2'
    implementation 'com.google.firebase:firebase-database:11.6.2'
    implementation 'com.google.firebase:firebase-auth:11.6.2'



    androidTestImplementation 'com.squareup.rx.idler:rx2-idler:0.9.0'

    implementation 'me.relex:circleindicator:1.2.2@aar'
    implementation 'com.facebook.stetho:stetho:1.5.0'

    implementation 'com.android.support:multidex:1.0.1'




}

afterEvaluate {
    android.sourceSets.all { sourceSet ->
        if (!sourceSet.name.startsWith("test")) {
            sourceSet.kotlin.setSrcDirs([])
        }
    }
}

apply plugin: 'com.google.gms.google-services'
